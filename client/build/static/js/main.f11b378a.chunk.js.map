{"version":3,"sources":["components/navigation.js","components/footer.js","components/login.js","components/register.js","components/protectedRoute.js","components/profile.js","components/tours.js","components/statistics.js","components/friends.js","components/feed.js","App.js","index.js"],"names":["Navigation","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","_useState3","_useState4","listOfTours","setListOfTours","console","log","hanldeSearch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","tours","wrap","_context","prev","next","axios","get","headers","sent","JSON","parse","data","t0","error","stop","apply","this","arguments","react_default","createElement","Navbar","collapseOnSelect","expand","bg","variant","Container","fluid","NavbarBrand","react_router_dom","as","Link","to","Form","className","FormControl","type","placeholder","classname","aria-lable","onChange","e","target","value","handleSearchInput","Button","onClick","length","map","tour","Card","style","width","Body","Title","href","tour_id","tour_name","Subtitle","tour_sport","ListGroup","Item","tour_date","tour_start_point","tour_distance","tour_duration","tour_elevation_up","tour_elevation_down","Text","concat","tour_text","Toggle","aria-controls","Offcanvas","id","aria-labelledby","placement","Header","closeButton","react_router","Nav","localStorage","removeItem","Footer","username","setUsername","useEffect","x-access-token","getItem","then","response","fixed","display","Login","email","password","inputField","setInputField","handleChangeInput","objectSpread","defineProperty","name","_LoginUser","preventDefault","post","user","setItem","window","location","alert","Row","Col","FloatingLabel","controlId","label","Control","_x","Register","komootEmail","komootPassword","kommotID","_RegisterUser","komootID","ProtectedRoute","isAuth","Component","component","rest","objectWithoutProperties","assign","render","props","pathname","state","from","withRouter","setEmail","_useState5","_useState6","setKomootID","Spinner","animation","role","Img","src","ListGroupItem","is_private","changedTourValues","setChangedTourValues","editing","editingTour","setEditingTour","_useState7","_useState8","html","setHtml","getAllTours","_ref2","Check","defaultChecked","checked","handleSwitchInput","es","handleTextInput","sportCount","setSportCount","sportCountFriend","setSportCountFriend","totalSport","setTotalSport","totalSportFriend","setTotalSportFriend","_useState9","_useState10","selectedStatistic","setSelectedStatisitic","_useState11","_useState12","selectedFriend","setSelectedFriend","_useState13","_useState14","listOfFriends","setListOfFriends","_useState15","_useState16","compareStatus","setCompareStatus","_useState17","_useState18","toursInMonthPerYear","setToursInMonthPerYear","_useState19","_useState20","toursInMonthPerYearFriend","setToursInMonthPerYearFriend","_useState21","_useState22","selectedYear","setSelectedYear","getListOfFriends","friends","getHowOftenSports","_ref3","_callee2","count","_context2","getHowOftenSportsFriend","_ref4","_callee3","totalFriend","_context3","friendemail","getTotalSportValues","_ref5","_callee4","total","_context4","getTotalSportValuesFriend","_ref6","_callee5","_context5","gettoursInMonthPerYear","_ref7","_callee6","year","_context6","gettoursInMonthPerYearFriend","_ref8","_callee7","_context7","hanldeCompare","handleYear","handleStatisticInput","handleFriendInput","handleYearInput","custom","sport","react_chartjs_2_es","labels","datasets","e_mtb","e_mtb_advanced","e_mtb_easy","e_racebike","e_touringbicycle","hike","jogging","mountaineering","mtb","mtb_advanced","mtb_easy","racebike","touringbicycle","backgroundColor","borderColor","borderWidth","skipNull","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","totalrecordedtours","totalplannedtours","totaldistance","totalduration","totalelevationup","totalelevationdown","friend","sportFriend","January","February","March","April","May","June","July","August","September","October","November","Dezember","toursFriend","foundUsers","setFoundUsers","userToFind","setUserToFind","deleteFriend","friendToDelete","usertodelete","handleSearch","status","varian","friendEmail","Feed","getFeed","tour_user_id","tour_creator_id","tour_type","tour_creator_username","tour_user_username","App","_React$createElement","_React$createElement2","userIsAuth","setUserIsAuth","checkingAuth","setCheckingAuth","isUserAuth","err","navigation","exact","path","protectedRoute","Profile","Friends","Statistics","Tours","footer","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f11b378a.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport React, { Component, useState }  from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  NavbarBrand,\r\n  Form,\r\n  Nav,\r\n  Offcanvas,\r\n  Card,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Navigation() {\r\n\r\n  const [search, setSearch] = useState([])\r\n  const [listOfTours, setListOfTours] = useState([])\r\n\r\n  console.log(listOfTours)\r\n\r\n\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n  \r\n  const handleSearchInput = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const hanldeSearch = async () => {\r\n    try {\r\n      const tours = await axios.get(\"https://kommot-social.herokuapp.com/api/search\",{\r\n        headers: {\r\n          search: search\r\n        },\r\n      });\r\n      if (tours) {\r\n        setListOfTours(JSON.parse(tours.data));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Navbar collapseOnSelect expand=\"false\" bg=\"dark\" variant=\"dark\">\r\n      <Container fluid>\r\n        <NavbarBrand>\r\n          <Link as={Link} to=\"/\">\r\n            Komoot-Social\r\n          </Link>\r\n        </NavbarBrand>\r\n        <Form className=\"d-flex\">\r\n          <FormControl\r\n            type=\"search\"\r\n            placeholder=\"Search for tour\"\r\n            classname=\"\"\r\n            aria-lable=\"Search\"\r\n            onChange={(e) => {\r\n              handleSearchInput(e);\r\n            }}\r\n          ></FormControl>\r\n          <Button variant=\"outline-success\" className=\"\" onClick={() => {\r\n                hanldeSearch();\r\n              }}>\r\n            Search\r\n          </Button>\r\n        </Form>\r\n        <div className=\"tourDisplay\">\r\n              {listOfTours.length > 0 &&\r\n                listOfTours.map((tour) => {\r\n                  return (\r\n                    <div>\r\n                      <Card style={{ width: \"35rem\" }} className=\"md-2\">\r\n                        <Card.Body>\r\n                          <Card.Title>\r\n                            <a\r\n                              href={\r\n                                \"https://www.komoot.de/tour/\" + tour.tour_id\r\n                              }\r\n                            >\r\n                              {tour.tour_name}\r\n                            </a>\r\n                          </Card.Title>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            {tour.tour_sport}\r\n                          </Card.Subtitle>\r\n                          <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                              Date: {tour.tour_date}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Start: {tour.tour_start_point}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Distance: {tour.tour_distance} km\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Duration: {tour.tour_duration} min\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Elevation Up: {tour.tour_elevation_up} m ➚\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Elevation Down: {tour.tour_elevation_down} m ➘\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Card.Text>Beschreibung:</Card.Text>\r\n                              <Card.Text>\r\n                                {parse(`${tour.tour_text}`)}\r\n                              </Card.Text>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <br></br>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n        <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\r\n        <Navbar.Offcanvas\r\n          id=\"offcanvasNavbar\"\r\n          aria-labelledby=\"offcanvasNavbarLabel\"\r\n          placement=\"end\"\r\n        >\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title id=\"offcanvasNavbarLabel\">Menu</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            <Switch>\r\n              <Nav className=\"justify-content-end flex-grow-1 pe-3\">\r\n                <Nav.Link as={Link} to=\"profile\">\r\n                  Profile\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to=\"/statistics\">\r\n                  Statistics\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tours\">\r\n                  Tours\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to=\"/friends\">\r\n                  Friends\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Switch>\r\n            <Button className=\"mt-4\" onClick={() => handleLogout()}>\r\n              LogOut\r\n            </Button>\r\n          </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n      </Container>\r\n    </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Nav, Container } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://kommot-social.herokuapp.com/api/user-data\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setUsername(response.data.username);\r\n      });\r\n  });\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"bottom\" display=\"block\">\r\n      <Container fluid>\r\n        <Switch>\r\n          <Nav>\r\n            <Nav.Link>Impressum</Nav.Link>\r\n            {username ? (\r\n              <Navbar.Text>Signed in as: {username}</Navbar.Text>\r\n            ) : (\r\n              <Navbar.Text>\r\n                <Link to=\"/login\">login</Link>/\r\n                <Link to=\"/register\">register</Link>\r\n              </Navbar.Text>\r\n            )}\r\n          </Nav>\r\n        </Switch>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FloatingLabel, Col, Row, Container } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [inputField, setInputField] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChangeInput = (e) => {\r\n    const value = e.target.value;\r\n    setInputField({\r\n      ...inputField,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  async function LoginUser(e) {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"https://kommot-social.herokuapp.com/api/login\", {\r\n        email: inputField.email,\r\n        password: inputField.password,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.user) {\r\n          localStorage.setItem(\"token\", response.data.user);\r\n          window.location.href = \"/\";\r\n        } else {\r\n          alert(\"wrong email/password\");\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col />\r\n\r\n        <Form className=\"\">\r\n          <FloatingLabel\r\n            controlId=\"floatingInput\"\r\n            label=\"Email address\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              name=\"email\"\r\n              value={inputField.email}\r\n              onChange={(e) => handleChangeInput(e)}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel\r\n            className=\"mb-3\"\r\n            controlId=\"floatingPassword\"\r\n            label=\"Password\"\r\n          >\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={inputField.password}\r\n              onChange={(e) => handleChangeInput(e)}\r\n            />\r\n          </FloatingLabel>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={LoginUser}>\r\n            Submit\r\n          </Button>\r\n          <Col />\r\n          <Switch>\r\n            <Link to=\"/register\">Register</Link>\r\n          </Switch>\r\n        </Form>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"../App.css\";\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FloatingLabel, Col, Row, Container } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nfunction Register() {\r\n  const [inputField, setInputField] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    komootEmail: \"\",\r\n    komootPassword: \"\",\r\n    kommotID: \"\",\r\n  });\r\n\r\n  const handleChangeInput = (e) => {\r\n    const value = e.target.value;\r\n    setInputField({\r\n      ...inputField,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  async function RegisterUser(e) {\r\n    e.preventDefault();\r\n    await axios.post(\"https://kommot-social.herokuapp.com/api/register\", {\r\n      username: inputField.username,\r\n      email: inputField.email,\r\n      password: inputField.password,\r\n      komootEmail: inputField.komootEmail,\r\n      komootPassword: inputField.komootPassword,\r\n      komootID: inputField.komootID,\r\n    });\r\n    window.location.href = \"/login\";\r\n  }\r\n\r\n  return (\r\n    <Container className=\"w-25 p-10\">\r\n      <Row>\r\n        <Col>\r\n          <Form>\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Username\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                value={inputField.username}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Email address\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"name@example.com\"\r\n                name=\"email\"\r\n                value={inputField.email}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              className=\"mb-3\"\r\n              controlId=\"floatingPassword\"\r\n              label=\"Password\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={inputField.password}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Form>\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Komoot-Email\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"name@example.com\"\r\n                name=\"komootEmail\"\r\n                value={inputField.komootEmail}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"floatingPassword\"\r\n              label=\"Komoot-Password\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"komootPassword\"\r\n                value={inputField.komootPassword}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              className=\"mb-3\"\r\n              controlId=\"floatingInput\"\r\n              label=\"Komoot-ID\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Komoot-ID\"\r\n                name=\"komootID\"\r\n                value={inputField.komootID}\r\n                onChange={(e) => handleChangeInput(e)}\r\n              />\r\n            </FloatingLabel>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={RegisterUser}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ isAuth: isAuth, component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Profile({ isAuth: isAuth, component: Component, ...rest }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [komootID, setKomootID] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://kommot-social.herokuapp.com/api/user-data\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setUsername(response.data.username);\r\n        setEmail(response.data.email);\r\n        setKomootID(response.data.komootID);\r\n      });\r\n  });\r\n\r\n  if (username === \"\") {\r\n    return (\r\n      <div>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col />\r\n          <Card style={{ width: \"25rem\" }}>\r\n            <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\r\n            <Card.Body>\r\n              <Card.Title>{username}</Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroupItem>Email: {email}</ListGroupItem>\r\n              <ListGroupItem>...</ListGroupItem>\r\n              <ListGroupItem>...</ListGroupItem>\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link>\r\n                <a href={\"https://komoot.de/user/\" + komootID}>KomootProfil</a>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n          <Col />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { DefaultEditor } from \"react-simple-wysiwyg\";\r\nimport parse from \"html-react-parser\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\n\r\nfunction Tours({ isAuth: isAuth, component: Component, ...rest }) {\r\n  const [listOfTours, setListOfTours] = useState([]);\r\n  const [changedTourValues, setChangedTourValues] = useState({\r\n    is_private: \"null\",\r\n    tour_text: \"null\",\r\n  });\r\n\r\n  console.log(changedTourValues)\r\n\r\n  const [editingTour, setEditingTour] = useState({\r\n    editing: false,\r\n    tour_id: null,\r\n  });\r\n\r\n  const [html, setHtml] = useState(null);\r\n\r\n  const handleEditing = (tour_id) => {\r\n    setEditingTour({ editing: true, tour_id: tour_id });\r\n  };\r\n\r\n  const handleTextInput = (e) => {\r\n    setHtml(e.target.value);\r\n    setChangedTourValues({\r\n      is_private: changedTourValues.is_private,\r\n      tour_text: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSwitchInput = (e) => {\r\n    let value = e.target.checked;\r\n    if (value) {\r\n      setChangedTourValues({\r\n        is_private: 1,\r\n        tour_text: changedTourValues.tour_text,\r\n      });\r\n    } else {\r\n      setChangedTourValues({\r\n        is_private: 0,\r\n        tour_text: changedTourValues.tour_text,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getAllTours = async () => {\r\n    try {\r\n      const tours = await axios.get(\"https://kommot-social.herokuapp.com/api/all-tours\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (tours) {\r\n        setListOfTours(JSON.parse(tours.data));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const UpdateTour = (tour_id) => {\r\n    axios.get(\"https://kommot-social.herokuapp.com/api/update-tour\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n        is_private: changedTourValues.is_private,\r\n        tour_text: changedTourValues.tour_text,\r\n        tour_id: tour_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTours();\r\n  }, []);\r\n\r\n  if (listOfTours.length === 0) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <div className=\"tourDisplay\">\r\n              {listOfTours.length > 0 &&\r\n                listOfTours.map((tour) => {\r\n                  return (\r\n                    <div>\r\n                      <Card style={{ width: \"35rem\" }} className=\"md-2\">\r\n                        <Card.Body>\r\n                          <Card.Title>\r\n                            <a\r\n                              href={\r\n                                \"https://www.komoot.de/tour/\" + tour.tour_id\r\n                              }\r\n                            >\r\n                              {tour.tour_name}\r\n                            </a>\r\n                          </Card.Title>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            {tour.tour_sport}\r\n                          </Card.Subtitle>\r\n                          <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                              Date: {tour.tour_date}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Start: {tour.tour_start_point}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Distance: {tour.tour_distance} km\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Duration: {tour.tour_duration} min\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Elevation Up: {tour.tour_elevation_up} m ➚\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              Elevation Down: {tour.tour_elevation_down} m ➘\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {tour.is_private === 1 ? (\r\n                                <p>Status: Privat</p>\r\n                              ) : (\r\n                                <p>Status: Öffentlich</p>\r\n                              )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Card.Text>Beschreibung:</Card.Text>\r\n                              <Card.Text>\r\n                                {parse(`${tour.tour_text}`)}\r\n                              </Card.Text>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"mt-3\">\r\n                              <Button\r\n                                onClick={() => {\r\n                                  handleEditing(tour.tour_id);\r\n                                }}\r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                            </ListGroup.Item>\r\n                            {editingTour.editing &&\r\n                            editingTour.tour_id === tour.tour_id ? (\r\n                              <Container className=\"mt-3\">\r\n                                <Form.Check\r\n                                  type=\"switch\"\r\n                                  className=\"mb-3\"\r\n                                  id=\"custom-switch\"\r\n                                  label=\"Change Status\"\r\n                                  defaultChecked={tour.is_private}\r\n                                  onChange={(e) => {\r\n                                    handleSwitchInput(e);\r\n                                  }}\r\n                                />\r\n\r\n                                <DefaultEditor\r\n                                  value={html}\r\n                                  onChange={(e) => {\r\n                                    handleTextInput(e);\r\n                                  }}\r\n                                />\r\n\r\n                                <Button\r\n                                  className=\"mt-3\"\r\n                                  onClick={() => {\r\n                                    UpdateTour(tour.tour_id);\r\n                                    setEditingTour({ editing: false });\r\n                                  }}\r\n                                >\r\n                                  Update\r\n                                </Button>\r\n                              </Container>\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </ListGroup>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <br></br>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Tours);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart, { Chart as ChartJS, defaults } from \"react-chartjs-2\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Statistics({ isAuth: isAuth, component: Component, ...rest }) {\r\n  const [sportCount, setSportCount] = useState([]);\r\n  const [sportCountFriend, setSportCountFriend] = useState([]);\r\n  const [totalSport, setTotalSport] = useState([]);\r\n  const [totalSportFriend, setTotalSportFriend] = useState([]);\r\n  const [selectedStatistic, setSelectedStatisitic] = useState(\"\");\r\n  const [selectedFriend, setSelectedFriend] = useState(\"\");\r\n  const [listOfFriends, setListOfFriends] = useState([]);\r\n  const [compareStatus, setCompareStatus] = useState(false);\r\n  const [toursInMonthPerYear, setToursInMonthPerYear] = useState([]);\r\n  const [toursInMonthPerYearFriend, setToursInMonthPerYearFriend] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n\r\n  console.log(selectedFriend)\r\n\r\n  \r\n\r\n  const getListOfFriends = async () => {\r\n    try {\r\n      const friends = await axios.get(\"https://kommot-social.herokuapp.com/api/list-friends\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (friends) {\r\n        setListOfFriends(friends.data.listOfFriends);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getHowOftenSports = async () => {\r\n    try {\r\n      const count = await axios.get(\"https://kommot-social.herokuapp.com/api/howOftenSport\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (count) {\r\n        setSportCount(count.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getHowOftenSportsFriend = async () => {\r\n    try {\r\n      \r\n      const totalFriend = await axios.get(\"https://kommot-social.herokuapp.com/api/HowOftenSportsFriend\", {\r\n        headers: {\r\n          friendemail: selectedFriend,\r\n        },\r\n      });\r\n      if (totalFriend) {\r\n        setSportCountFriend(totalFriend.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getTotalSportValues = async () => {\r\n    try {\r\n      const total = await axios.get(\"https://kommot-social.herokuapp.com/api/totalSportValues\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (total) {\r\n        setTotalSport(total.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getTotalSportValuesFriend = async () => {\r\n    try {\r\n      \r\n      const totalFriend = await axios.get(\"https://kommot-social.herokuapp.com/api/totalSportValuesFriend\", {\r\n        headers: {\r\n          friendemail: selectedFriend,\r\n        },\r\n      });\r\n      if (totalFriend) {\r\n        setTotalSportFriend(totalFriend.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const gettoursInMonthPerYear = async (year) => {\r\n    try {\r\n      const count = await axios.get(\"https://kommot-social.herokuapp.com/api/toursInMonthPerYear\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          year: year,\r\n        },\r\n      });\r\n      if (count) {\r\n        setToursInMonthPerYear(count.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const gettoursInMonthPerYearFriend = async () => {\r\n    try {\r\n      \r\n      const totalFriend = await axios.get(\"https://kommot-social.herokuapp.com/api/toursInMonthPerYearFriend\", {\r\n        headers: {\r\n          friendemail: selectedFriend,\r\n          year: selectedYear,\r\n        },\r\n      });\r\n      if (totalFriend) {\r\n        setToursInMonthPerYearFriend(totalFriend.data);\r\n        \r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n\r\n  const hanldeCompare = () => {\r\n    if (compareStatus === false) {\r\n      setCompareStatus(true);\r\n    } else if (compareStatus === true) {\r\n      setCompareStatus(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleYear = () => {\r\n    gettoursInMonthPerYear(selectedYear);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHowOftenSports();\r\n    getTotalSportValues();\r\n    getListOfFriends();\r\n    \r\n  }, []);\r\n\r\n  const handleStatisticInput = (e) => {\r\n    const value = e.target.value;\r\n    if (value !== \"none\") {\r\n      setSelectedStatisitic(value);\r\n    }\r\n  };\r\n\r\n  const handleFriendInput = (e) => {\r\n    const value = e.target.value;\r\n    if (value !== \"none\") {\r\n      setSelectedFriend(value);\r\n    }\r\n  };\r\n\r\n  const handleYearInput = (e) => {\r\n    const value = e.target.value;\r\n    if (value !== \"none\") {\r\n      setSelectedYear(value);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  if (selectedStatistic === \"howoften\" && compareStatus === false) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Button\r\n              className=\"mt-4\"\r\n              variant=\"outline-success\"\r\n              onClick={() => {\r\n                hanldeCompare();\r\n              }}\r\n            >\r\n              Compare with Friend\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {sportCount.map((sport) => {\r\n              return (\r\n                <div>\r\n                  <Bar\r\n                    className=\"mt-3\"\r\n                    data={{\r\n                      labels: [\r\n                        \"e_mtb\",\r\n                        \"e_mtb_advanced\",\r\n                        \"e_mtb_easy\",\r\n                        \"e_racebike\",\r\n                        \"e_touringbicycle\",\r\n                        \"hike\",\r\n                        \"jogging\",\r\n                        \"mountaineering\",\r\n                        \"mtb\",\r\n                        \"mtb_advanced\",\r\n                        \"mtb_easy\",\r\n                        \"racebike\",\r\n                        \"touringbicycle\",\r\n                      ],\r\n                      datasets: [\r\n                        {\r\n                          label: \"# number of sporttypes\",\r\n                          data: [\r\n                            sport.e_mtb,\r\n                            sport.e_mtb_advanced,\r\n                            sport.e_mtb_easy,\r\n                            sport.e_racebike,\r\n                            sport.e_touringbicycle,\r\n                            sport.hike,\r\n                            sport.jogging,\r\n                            sport.mountaineering,\r\n                            sport.mtb,\r\n                            sport.mtb_advanced,\r\n                            sport.mtb_easy,\r\n                            sport.mtb_easy,\r\n                            sport.racebike,\r\n                            sport.touringbicycle,\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"rgba(255, 99, 132, 0.2)\",\r\n                            \"rgba(54, 162, 235, 0.2)\",\r\n                            \"rgba(255, 206, 86, 0.2)\",\r\n                            \"rgba(75, 192, 192, 0.2)\",\r\n                            \"rgba(153, 102, 255, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderColor: [\r\n                            \"rgba(255, 99, 132, 1)\",\r\n                            \"rgba(54, 162, 235, 1)\",\r\n                            \"rgba(255, 206, 86, 1)\",\r\n                            \"rgba(75, 192, 192, 1)\",\r\n                            \"rgba(153, 102, 255, 1)\",\r\n                            \"rgba(255, 159, 64, 1)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderWidth: 2,\r\n                          skipNull: false,\r\n                        },\r\n                      ],\r\n                    }}\r\n                    height={400}\r\n                    width={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                      scales: {\r\n                        yAxes: {\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (selectedStatistic === \"total\" && compareStatus === false) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                hanldeCompare();\r\n              }}\r\n            >\r\n              Compare with Friend\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {totalSport.map((total) => {\r\n              return (\r\n                <div>\r\n                  <Card style={{ width: \"25rem\" }} className=\"mt-3\">\r\n                    <Card.Body>\r\n                      <Card.Title>Total Sport Values</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem>\r\n                        Total recorded Tours: {total.totalrecordedtours}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Total planned Tours: {total.totalplannedtours}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Total distance: {total.totaldistance}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Total duration: {total.totalduration}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Total elevation up: {total.totalelevationup}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Total elevation down: {total.totalelevationdown}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (selectedStatistic === \"howoften\" && compareStatus === true) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Form.Control\r\n              className=\"mt-2\"\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleFriendInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Friend To Compare--</option>\r\n              {listOfFriends.map((friend) => (\r\n                <option value={friend.email}>{friend.username}</option>\r\n              ))}\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                getHowOftenSportsFriend();\r\n              }}\r\n            >\r\n              Load Friend Data\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {sportCount.map((sport) => {\r\n              return sportCountFriend.map((sportFriend) => {\r\n                return (\r\n                  <div>\r\n                    <Bar\r\n                      className=\"mt-3\"\r\n                      data={{\r\n                        labels: [\r\n                          \"e_mtb\",\r\n                          \"e_mtb_advanced\",\r\n                          \"e_mtb_easy\",\r\n                          \"e_racebike\",\r\n                          \"e_touringbicycle\",\r\n                          \"hike\",\r\n                          \"jogging\",\r\n                          \"mountaineering\",\r\n                          \"mtb\",\r\n                          \"mtb_advanced\",\r\n                          \"mtb_easy\",\r\n                          \"racebike\",\r\n                          \"touringbicycle\",\r\n                        ],\r\n                        datasets: [\r\n                          {\r\n                            label: \"# number of sporttypes from you\",\r\n                            data: [\r\n                              sport.e_mtb,\r\n                              sport.e_mtb_advanced,\r\n                              sport.e_mtb_easy,\r\n                              sport.e_racebike,\r\n                              sport.e_touringbicycle,\r\n                              sport.hike,\r\n                              sport.jogging,\r\n                              sport.mountaineering,\r\n                              sport.mtb,\r\n                              sport.mtb_advanced,\r\n                              sport.mtb_easy,\r\n                              sport.mtb_easy,\r\n                              sport.racebike,\r\n                              sport.touringbicycle,\r\n                            ],\r\n                            backgroundColor: [\r\n                              \"rgba(185, 163, 1, 0.4)\",\r\n                              \"rgba(54, 162, 235, 1)\",\r\n                              \"rgba(255, 206, 86, 1)\",\r\n                              \"rgba(75, 192, 192, 1)\",\r\n                              \"rgba(153, 102, 255, 1)\",\r\n                              \"rgba(255, 159, 64, 1)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(2, 7, 156, 0.2)\",\r\n                              \"rgba(62, 171, 0, 0.5)\",\r\n                              \"rgba(22, 254, 177, 0.1)\",\r\n                              \"rgba(199, 51, 156, 1) \",\r\n                              \"rgba(5, 160, 96, 0.3)\",\r\n                            ],\r\n                            borderColor: [\r\n                              \"rgba(185, 163, 1, 0.4)\",\r\n                              \"rgba(54, 162, 235, 1)\",\r\n                              \"rgba(255, 206, 86, 1)\",\r\n                              \"rgba(75, 192, 192, 1)\",\r\n                              \"rgba(153, 102, 255, 1)\",\r\n                              \"rgba(255, 159, 64, 1)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(2, 7, 156, 0.2) rgba(2, 7, 156, 0.2)\",\r\n                              \"rgba(62, 171, 0, 0.5)\",\r\n                              \"rgba(22, 254, 177, 0.1)\",\r\n                              \"rgba(199, 51, 156, 1) \",\r\n                              \"rgba(5, 160, 96, 0.3)\",\r\n                            ],\r\n                            borderWidth: 2,\r\n                            skipNull: false,\r\n                          },\r\n                          {\r\n                            label:\r\n                              \"# number of sporttypes from \" + selectedFriend,\r\n                            data: [\r\n                              sportFriend.e_mtb,\r\n                              sportFriend.e_mtb_advanced,\r\n                              sportFriend.e_mtb_easy,\r\n                              sportFriend.e_racebike,\r\n                              sportFriend.e_touringbicycle,\r\n                              sportFriend.hike,\r\n                              sportFriend.jogging,\r\n                              sportFriend.mountaineering,\r\n                              sportFriend.mtb,\r\n                              sportFriend.mtb_advanced,\r\n                              sportFriend.mtb_easy,\r\n                              sportFriend.mtb_easy,\r\n                              sportFriend.racebike,\r\n                              sportFriend.touringbicycle,\r\n                            ],\r\n                            backgroundColor: [\r\n                              \"rgba(255, 99, 132, 0.2)\",\r\n                              \"rgba(54, 162, 235, 0.2)\",\r\n                              \"rgba(255, 206, 86, 0.2)\",\r\n                              \"rgba(75, 192, 192, 0.2)\",\r\n                              \"rgba(153, 102, 255, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                            ],\r\n                            borderColor: [\r\n                              \"rgba(255, 99, 132, 1)\",\r\n                              \"rgba(54, 162, 235, 1)\",\r\n                              \"rgba(255, 206, 86, 1)\",\r\n                              \"rgba(75, 192, 192, 1)\",\r\n                              \"rgba(153, 102, 255, 1)\",\r\n                              \"rgba(255, 159, 64, 1)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                              \"rgba(255, 159, 64, 0.2)\",\r\n                            ],\r\n                            borderWidth: 2,\r\n                            skipNull: false,\r\n                          },\r\n                        ],\r\n                      }}\r\n                      height={400}\r\n                      width={400}\r\n                      options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                          yAxes: {\r\n                            ticks: {\r\n                              beginAtZero: true,\r\n                            },\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </div>\r\n                );\r\n              });\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (selectedStatistic === \"total\" && compareStatus === true) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Form.Control\r\n              className=\"mt-2\"\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleFriendInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Friend To Compare--</option>\r\n              {listOfFriends.map((friend) => (\r\n                <option value={friend.email}>{friend.username}</option>\r\n              ))}\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                getTotalSportValuesFriend();\r\n              }}\r\n            >\r\n              Load Friend Data\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {totalSport.map((total) => {\r\n              return totalSportFriend.map((totalFriend) => {\r\n                return (\r\n                  <div>\r\n                    <Card style={{ width: \"32rem\" }} className=\"mt-3\">\r\n                      <Card.Body>\r\n                        <Card.Title>Total Sport Values</Card.Title>\r\n                      </Card.Body>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>\r\n                          Total recorded Tours: {total.totalrecordedtours} /{\" \"}\r\n                          {totalFriend.totalrecordedtours}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                          Total planned Tours: {total.totalplannedtours} /{\" \"}\r\n                          {totalFriend.totalplannedtours}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                          Total distance: {total.totaldistance} /{\" \"}\r\n                          {totalFriend.totaldistance}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                          Total duration: {total.totalduration} /{\" \"}\r\n                          {totalFriend.totalduration}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                          Total elevation up: {total.totalelevationup} /{\" \"}\r\n                          {totalFriend.totalelevationup}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                          Total elevation down: {total.totalelevationdown} /{\" \"}\r\n                          {totalFriend.totalelevationdown}\r\n                        </ListGroupItem>\r\n                      </ListGroup>\r\n                    </Card>\r\n                  </div>\r\n                );\r\n              });\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (selectedStatistic === \"sportPerMonth\" && compareStatus === false) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleYearInput(e)}\r\n            > \r\n              <option value=\"none\">--Select Year--</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2019\">2019</option>\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                handleYear();\r\n              }}\r\n            >\r\n              Select Year\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                hanldeCompare();\r\n              }}\r\n            >\r\n              Compare with Friend\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {toursInMonthPerYear.map((tours) => {\r\n              return (\r\n                <div>\r\n                  <Line\r\n                    className=\"mt-3\"\r\n                    data={{\r\n                      labels: [\r\n                        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'Dezember',\r\n                      ],\r\n                      datasets: [\r\n                        {\r\n                          label: \"# number of sporttypes per month\",\r\n                          data: [\r\n                            tours.January,\r\n                            tours.February,\r\n                            tours.March,\r\n                            tours.April,\r\n                            tours.May,\r\n                            tours.June,\r\n                            tours.July,\r\n                            tours.August,\r\n                            tours.September,\r\n                            tours.October,\r\n                            tours.November,\r\n                            tours.Dezember,\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"rgba(255, 99, 132, 0.2)\",\r\n                            \"rgba(54, 162, 235, 0.2)\",\r\n                            \"rgba(255, 206, 86, 0.2)\",\r\n                            \"rgba(75, 192, 192, 0.2)\",\r\n                            \"rgba(153, 102, 255, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderColor: [\r\n                            \"rgba(255, 99, 132, 1)\",\r\n                            \"rgba(54, 162, 235, 1)\",\r\n                            \"rgba(255, 206, 86, 1)\",\r\n                            \"rgba(75, 192, 192, 1)\",\r\n                            \"rgba(153, 102, 255, 1)\",\r\n                            \"rgba(255, 159, 64, 1)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderWidth: 2,\r\n                          skipNull: false,\r\n                        },\r\n                      ],\r\n                    }}\r\n                    height={400}\r\n                    width={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                      scales: {\r\n                        yAxes: {\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (selectedStatistic === \"sportPerMonth\" && compareStatus === true) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n            <Form.Control\r\n              className=\"mt-2\"\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleFriendInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Friend To Compare--</option>\r\n              {listOfFriends.map((friend) => (\r\n                <option value={friend.email}>{friend.username}</option>\r\n              ))}\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                gettoursInMonthPerYearFriend();\r\n              }}\r\n            >\r\n              Load Friend Data\r\n            </Button>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleYearInput(e)}\r\n            > \r\n              <option value=\"none\">--Select Year--</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2019\">2019</option>\r\n            </Form.Control>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              className=\"mt-3\"\r\n              onClick={() => {\r\n                handleYear();\r\n              }}\r\n            >\r\n              Select Year\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {toursInMonthPerYear.map((tours) => {\r\n              return toursInMonthPerYearFriend.map((toursFriend) => {\r\n                return (\r\n                  <div>\r\n                    <Line\r\n                    className=\"mt-3\"\r\n                    data={{\r\n                      labels: [\r\n                        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'Dezember',\r\n                      ],\r\n                      datasets: [\r\n                        {\r\n                          label: \"# number of sporttypes per month\",\r\n                          data: [\r\n                            tours.January,\r\n                            tours.February,\r\n                            tours.March,\r\n                            tours.April,\r\n                            tours.May,\r\n                            tours.June,\r\n                            tours.July,\r\n                            tours.August,\r\n                            tours.September,\r\n                            tours.October,\r\n                            tours.November,\r\n                            tours.Dezember,\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"rgba(255, 99, 132, 0.2)\",\r\n                            \"rgba(54, 162, 235, 0.2)\",\r\n                            \"rgba(255, 206, 86, 0.2)\",\r\n                            \"rgba(75, 192, 192, 0.2)\",\r\n                            \"rgba(153, 102, 255, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderColor: [\r\n                            \"rgba(255, 99, 132, 1)\",\r\n                            \"rgba(54, 162, 235, 1)\",\r\n                            \"rgba(255, 206, 86, 1)\",\r\n                            \"rgba(75, 192, 192, 1)\",\r\n                            \"rgba(153, 102, 255, 1)\",\r\n                            \"rgba(255, 159, 64, 1)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderWidth: 2,\r\n                          skipNull: true,\r\n                        },\r\n                        {\r\n                          label: \"# number of sporttypes per month \" + selectedFriend,\r\n                          data: [\r\n                            toursFriend.January,\r\n                            toursFriend.February,\r\n                            toursFriend.March,\r\n                            toursFriend.April,\r\n                            toursFriend.May,\r\n                            toursFriend.June,\r\n                            toursFriend.July,\r\n                            toursFriend.August,\r\n                            toursFriend.September,\r\n                            toursFriend.October,\r\n                            toursFriend.November,\r\n                            toursFriend.Dezember,\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"rgba(255, 99, 132, 0.2)\",\r\n                            \"rgba(54, 162, 235, 0.2)\",\r\n                            \"rgba(255, 206, 86, 0.2)\",\r\n                            \"rgba(75, 192, 192, 0.2)\",\r\n                            \"rgba(153, 102, 255, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderColor: [\r\n                            \"rgba(255, 99, 132, 1)\",\r\n                            \"rgba(54, 162, 235, 1)\",\r\n                            \"rgba(255, 206, 86, 1)\",\r\n                            \"rgba(75, 192, 192, 1)\",\r\n                            \"rgba(153, 102, 255, 1)\",\r\n                            \"rgba(255, 159, 64, 1)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                            \"rgba(255, 159, 64, 0.2)\",\r\n                          ],\r\n                          borderWidth: 2,\r\n                          skipNull: true,\r\n                        },\r\n                      ],\r\n                    }}\r\n                    height={400}\r\n                    width={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                      scales: {\r\n                        yAxes: {\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                  </div>\r\n                );\r\n              });\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              onChange={(e) => handleStatisticInput(e)}\r\n            >\r\n              <option value=\"none\">--Select Statistic--</option>\r\n              <option value=\"total\">Total Sport Values</option>\r\n              <option value=\"howoften\">How Often Sporttypes</option>\r\n              <option value=\"sportPerMonth\">Sport per Month</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Statistics);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Friends({ isAuth: isAuth, component: Component, ...rest }) {\r\n  const [foundUsers, setFoundUsers] = useState([]);\r\n  const [listOfFriends, setListOfFriends] = useState([]);\r\n  const [userToFind, setUserToFind] = useState(\"\");\r\n\r\n  console.log(\"Search: \" + foundUsers)\r\n  console.log(\"list of friends: \"+ listOfFriends)\r\n\r\n  const deleteFriend = async (friendToDelete) => {\r\n    try {\r\n      const deleteUser = await axios\r\n        .get(\"https://kommot-social.herokuapp.com/api/delete-friend\", {\r\n          headers: {\r\n            \"x-access-token\": localStorage.getItem(\"token\"),\r\n            usertodelete: friendToDelete,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          \r\n        });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const user = await axios.get(\"https://kommot-social.herokuapp.com/api/search-user\", {\r\n        headers: {\r\n          user: userToFind,\r\n        },\r\n      });\r\n      if (user) {\r\n        setFoundUsers(user.data);\r\n      }\r\n\r\n      if (user.status === \"error\") {\r\n        alert(\"User not Found\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSearchInput = (e) => {\r\n    setUserToFind(e.target.value);\r\n  };\r\n\r\n  const handleAddFriend = (friendEmail) => {\r\n    axios.get(\"https://kommot-social.herokuapp.com/api/add-friend\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n        email: friendEmail,\r\n      },\r\n    });\r\n    setFoundUsers([]);\r\n  };\r\n\r\n  const getListOfFriends = async () => {\r\n    try {\r\n      const friends = await axios.get(\"https://kommot-social.herokuapp.com/api/list-friends\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (friends) {\r\n        setListOfFriends(friends.data.listOfFriends);\r\n        console.log(friends.data.listOfFriends)\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfFriends();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search for User\"\r\n              classname=\"\"\r\n              aria-lable=\"Search\"\r\n              onChange={(e) => {\r\n                handleSearchInput(e);\r\n              }}\r\n            ></FormControl>\r\n            <Button\r\n              variant=\"outline-success\"\r\n              onClick={() => {\r\n                handleSearch();\r\n              }}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Form>\r\n          {foundUsers.length !== 0 ? (\r\n            <Container>\r\n              <Card style={{ width: \"20rem\" }} className=\"mt-4\">\r\n                <Card.Title>Result:</Card.Title>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    {foundUsers.username} / {foundUsers.email}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n              <Button\r\n                varian=\"outline-succes\"\r\n                className=\"mt-3\"\r\n                onClick={() => {\r\n                  handleAddFriend(foundUsers.email);\r\n                }}\r\n              >\r\n                Add Friend\r\n              </Button>\r\n            </Container>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {listOfFriends.length > 0 ? (\r\n            <div>\r\n              <Card style={{ width: \"35rem\" }} className=\"mt-4\">\r\n                <Card.Title>Friends:</Card.Title>\r\n                <ListGroup variant=\"flush\">\r\n                  {listOfFriends.map((friend) => (\r\n                    <div>\r\n                      <ListGroup.Item>{friend.username}</ListGroup.Item>\r\n                      <ListGroup.Item>{friend.email}</ListGroup.Item>\r\n                      <Button\r\n                        className=\"m-2\"\r\n                        variant=\"danger\"\r\n                        onClick={() => deleteFriend(friend.email)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card>\r\n            </div>\r\n          ) : (\r\n            <h3>Search for Friends</h3>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(Friends);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\n\r\nfunction Feed() {\r\n  const [listOfTours, setListOfTours] = useState([]);\r\n\r\n  const getFeed = async () => {\r\n    try {\r\n      const tours = await axios.get(\"https://kommot-social.herokuapp.com/api/get-feed\");\r\n      if (tours) {\r\n        setListOfTours(JSON.parse(tours.data));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeed();\r\n  }, [getFeed()]);\r\n\r\n  if (listOfTours.length === 0) {\r\n    return (\r\n      <div>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <div className=\"tourDisplay\">\r\n              {listOfTours.length > 0 &&\r\n                listOfTours.map((tour) => {\r\n                  return (\r\n                    <div>\r\n                      <Card style={{ width: \"30rem\" }} className=\"md-2\">\r\n                        <Card.Body>\r\n                          {tour.tour_user_id === tour.tour_creator_id &&\r\n                          tour.tour_type === \"tour_recorded\" ? (\r\n                            <Card.Title>\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/user/\" +\r\n                                  tour.tour_user_id\r\n                                }\r\n                              >\r\n                                {tour.tour_creator_username}\r\n                              </a>{\" \"}\r\n                              recorded{\" \"}\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/tour/\" + tour.tour_id\r\n                                }\r\n                              >\r\n                                {tour.tour_name}\r\n                              </a>\r\n                            </Card.Title>\r\n                          ) : tour.tour_user_id !== tour.tour_creator_id &&\r\n                            tour.tour_type === \"tour_recorded\" ? (\r\n                            <Card.Title>\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/user/\" +\r\n                                  tour.tour_creator_id\r\n                                }\r\n                              >\r\n                                {tour.tour_creator_username}\r\n                              </a>{\" \"}\r\n                              recorded{\" \"}\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/tour/\" + tour.tour_id\r\n                                }\r\n                              >\r\n                                {tour.tour_name}\r\n                              </a>{\" \"}\r\n                              with{\" \"}\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/user/\" +\r\n                                  tour.tour_user_id\r\n                                }\r\n                              >\r\n                                {tour.tour_user_username}\r\n                              </a>\r\n                            </Card.Title>\r\n                          ) : (\r\n                            <Card.Title>\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/user/\" +\r\n                                  tour.tour_user_id\r\n                                }\r\n                              >\r\n                                {tour.tour_user_username}\r\n                              </a>{\" \"}\r\n                              planned{\" \"}\r\n                              <a\r\n                                href={\r\n                                  \"https://www.komoot.de/tour/\" + tour.tour_id\r\n                                }\r\n                              >\r\n                                {tour.tour_name}\r\n                              </a>\r\n                            </Card.Title>\r\n                          )}\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            {tour.tour_sport}\r\n                          </Card.Subtitle>\r\n                          <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>{tour.tour_date}</ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {tour.tour_distance} km\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {tour.tour_duration} min\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {tour.tour_elevation_up} m ➚\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {tour.tour_elevation_down} m ➘\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Card.Text>Beschreibung:</Card.Text>\r\n                              <Card.Text>\r\n                                {parse(`${tour.tour_text}`)}\r\n                              </Card.Text>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <br></br>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Feed;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"./components/navigation\";\nimport Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport ProtectedRoute from \"./components/protectedRoute\";\nimport Profile from \"./components/profile\";\nimport Tours from \"./components/tours\";\nimport Statistics from \"./components/statistics\";\nimport Friends from \"./components/friends\";\nimport Feed from \"./components/feed\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { useHistory, withRouter } from \"react-router\";\nimport { Container } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const [userIsAuth, setUserIsAuth] = useState(false);\n  const [checkingAuth, setCheckingAuth] = useState(false);\n\n  const isUserAuth = async () => {\n    try {\n      if (localStorage.getItem(\"token\")) {\n        setUserIsAuth(true);\n        setCheckingAuth(true);\n      } else {\n        setUserIsAuth(false);\n        setCheckingAuth(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    isUserAuth();\n  }, []);\n\n  if (checkingAuth) {\n    return (\n      <div>\n        <Router>\n          <Navigation />\n          <Route exact path=\"/\" component={Feed}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/register\" component={Register}></Route>\n          <ProtectedRoute\n            exact\n            path=\"/profile\"\n            component={withRouter(Profile)}\n            isAuth={userIsAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/friends\"\n            component={withRouter(Friends)}\n            isAuth={userIsAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/statistics\"\n            exact\n            component={Statistics}\n            isAuth={userIsAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/tours\"\n            exact\n            component={Tours}\n            isAuth={userIsAuth}\n          />\n          <Footer />\n        </Router>\n      </div>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}